# TODO add that daataset that you're missing from mouse to the cart!!!
# TODO rename "adrenal gland" to "adrenal_gland"
import pandas as pd
import os
import sys
import numpy as np

p = os.getcwd()
sys.path.append(p)

from sm_utils import *

include: 'download.smk'
include: 'samtools.smk'
include: 'spike_refs.smk'
include: 'refs.smk'
include: 'talon.smk'

############# config stuff
configfile: 'config.yml'

datasets_per_talon_run = 14
species=['human', 'mouse']

# lr stuff
# lr_df = pd.read_csv(expand(config['lr']['meta'], species=species)[0], sep='\t')
lr_df = process_lr_metadata(config['lr']['meta'],
                            ['human', 'mouse'],
                            datasets_per_talon_run)

wildcard_constraints:
    dataset='|'.join([re.escape(x) for x in lr_df.dataset.tolist()]),
    species='|'.join([re.escape(x) for x in lr_df.species.unique().tolist()]),
    talon_run='|'.join([re.escape(x) for x in lr_df.talon_run.astype(str).unique().tolist()])

############ rules
rule all:
    input:
        expand(config['lr']['talon']['bam_ind'],
               zip,
               species=lr_df.species.tolist(),
               dataset=lr_df.dataset.tolist()),
        expand(config['lr']['talon']['db'],
               zip,
               species=lr_df.species.tolist(),
               talon_run=lr_df.max_talon_run.tolist())
        # expand(config['lr']['talon']['config'],
        #        zip,
        #        species=lr_df.species.tolist(),
        #        talon_run=lr_df.talon_run.tolist())
        # expand(config['lr']['bam_ind'],
        #        species=species,
        #        dataset=['hl60_1_1',
        #                 'brodmann_area_46_1_1'])



################################################################################
############################### LR Download ####################################
################################################################################
use rule dl_encid as lr_dl with:
    params:
        encid = lambda wc:get_lr_encid(wc, lr_df),
        file_ext = 'bam'
    output:
        out = temporary(config['lr']['bam'])
